{"version":3,"sources":["components/MainBody/Navbar/Navbar.module.css","components/MainBody/AboutMe/AboutMe.module.css","components/MainBody/Welcome/Welcome.module.css","components/Reusuable/Project/Project.module.css","App.module.css","assets/Sinthooran_Ravinathan_Resume.pdf","assets/images/me.png","components/MainBody/Projects/Projects.module.css","main_context.js","components/MainBody/Navbar/Navbar.js","components/MainBody/Welcome/Welcome.js","components/MainBody/AboutMe/AboutMe.js","components/Reusuable/Project/Project.js","components/MainBody/Projects/Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MainContext","createContext","theme","switchTheme","Navbar","props","navTheme","mainTheme","useContext","classes","LightNav","DarkNav","className","join","Name","href","target","rel","Email","fontSize","GitHub","LinkedIn","Resume","PictureAsPdfSharp","onClick","event","preventDefault","ThemeIcon","Welcome","bgTheme","LightBg","DarkBg","aboutMe","AboutMe","src","MyPic","alt","Description","Interests","SkillGrid","Project","panelColor","LightBorder","DarkBorder","style","height","image","title","description","link","projects","Projects","projectList","map","proj","key","App","currentTheme","useState","setTheme","Light","Dark","Provider","value","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9f01da62.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__2QOk-\",\"Name\":\"Navbar_Name__25mSE\",\"LightNav\":\"Navbar_LightNav__-SnJC\",\"DarkNav\":\"Navbar_DarkNav__aDv6D\",\"ThemeIcon\":\"Navbar_ThemeIcon__2jJ_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AboutMe\":\"AboutMe_AboutMe__3ZB09\",\"AboutMeDesc\":\"AboutMe_AboutMeDesc__pWgNj\",\"Description\":\"AboutMe_Description__3CXuL\",\"SkillGrid\":\"AboutMe_SkillGrid__1DK4N\",\"Interests\":\"AboutMe_Interests__3SjwW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Welcome\":\"Welcome_Welcome__1VcOZ\",\"fade\":\"Welcome_fade__fnBJc\",\"LightBg\":\"Welcome_LightBg__38Jbb\",\"DarkBg\":\"Welcome_DarkBg__2kekL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Project\":\"Project_Project__3dDQK\",\"LightBorder\":\"Project_LightBorder__34MBG\",\"DarkBorder\":\"Project_DarkBorder__3W0LO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3lU5G\",\"App-logo\":\"App_App-logo__1w0ae\",\"Light\":\"App_Light__1NnyP\",\"fade\":\"App_fade__2w53Z\",\"Dark\":\"App_Dark__EEd6F\"};","module.exports = __webpack_public_path__ + \"static/media/Sinthooran_Ravinathan_Resume.1ccd6d4f.pdf\";","module.exports = __webpack_public_path__ + \"static/media/me.66512055.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Projects\":\"Projects_Projects__1Qt1G\"};","import { createContext } from \"react\";\r\n\r\nexport const MainContext = createContext({\r\n  theme: false,\r\n  switchTheme: () => {},\r\n});\r\n","import React, { useContext } from \"react\";\r\nimport { Email, GitHub, LinkedIn, PictureAsPdfSharp } from \"@material-ui/icons\";\r\nimport Resume from \"../../../assets/Sinthooran_Ravinathan_Resume.pdf\";\r\nimport { MainContext } from \"../../../main_context\";\r\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\r\nimport NightsStayIcon from \"@material-ui/icons/NightsStay\";\r\nimport classes from \"./Navbar.module.css\";\r\n\r\nconst Navbar = (props) => {\r\n  const mainTheme = useContext(MainContext);\r\n\r\n  const themeSwitch = (event) => {\r\n    mainTheme.switchTheme();\r\n    event.preventDefault();\r\n  };\r\n\r\n  let navTheme;\r\n\r\n  switch (mainTheme.theme) {\r\n    case false:\r\n      navTheme = classes.LightNav;\r\n      break;\r\n    case true:\r\n      navTheme = classes.DarkNav;\r\n      break;\r\n    default:\r\n  }\r\n\r\n  return (\r\n    <header className={[classes.Navbar, navTheme].join(\" \")}>\r\n      <span className={classes.Name}>\r\n        <h3>Sinthooran Ravinathan</h3>\r\n      </span>\r\n\r\n      <nav>\r\n        <a\r\n          href=\"mailto: sinthooranr@gmail.com\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <Email fontSize=\"large\" />\r\n        </a>\r\n        <a\r\n          href=\"https://github.com/SinthooranR\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <GitHub fontSize=\"large\" />\r\n        </a>\r\n        <a\r\n          href=\"https://www.linkedin.com/in/sinthooranravinathan/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <LinkedIn fontSize=\"large\" />\r\n        </a>\r\n        <a href={Resume} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <PictureAsPdfSharp fontSize=\"large\" />\r\n        </a>\r\n      </nav>\r\n      <div onClick={themeSwitch} className={classes.ThemeIcon}>\r\n        {!mainTheme.theme ? (\r\n          <WbSunnyIcon fontSize=\"large\" />\r\n        ) : (\r\n          <NightsStayIcon fontSize=\"large\" />\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useContext } from \"react\";\r\nimport { MainContext } from \"../../../main_context\";\r\nimport classes from \"./Welcome.module.css\";\r\n\r\nconst Welcome = (props) => {\r\n  const mainTheme = useContext(MainContext);\r\n\r\n  let bgTheme;\r\n\r\n  switch (mainTheme.theme) {\r\n    case false:\r\n      bgTheme = classes.LightBg;\r\n      break;\r\n    case true:\r\n      bgTheme = classes.DarkBg;\r\n      break;\r\n    default:\r\n  }\r\n\r\n  return (\r\n    <div className={[classes.Welcome, bgTheme].join(\" \")}>\r\n      <h1>Welcome</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","import React from \"react\";\r\nimport MyPic from \"../../../assets/images/me.png\";\r\nimport classes from \"./AboutMe.module.css\";\r\n\r\nconst aboutMe = (props) => (\r\n  <div className={classes.AboutMe}>\r\n    <h1>About Me and My Education</h1>\r\n    <img src={MyPic} alt=\"avatar\" />\r\n\r\n    <div className={classes.Description}>\r\n      <p>\r\n        Graduated from the University of Ontario Institute of Technology(UOIT)\r\n        as of May 2020 in Computer Science and aspire to work as a Web/Mobile\r\n        Developer\r\n      </p>\r\n      <span>\r\n        <h2>Interests:</h2>\r\n        <ul className={classes.Interests}>\r\n          <li>\r\n            Interested in learning various languages to help experience the\r\n            worlds of Web and Mobile development\r\n          </li>\r\n          <li>\r\n            Making use of various databases such as MongoDB, Postgres and SQLite\r\n          </li>\r\n          <li>Designing Pages meeting the indviduals criteria</li>\r\n        </ul>\r\n      </span>\r\n\r\n      <h2>Skills</h2>\r\n      <span className={classes.SkillGrid}>\r\n        <div>\r\n          <ul>\r\n            <h3>Languages</h3>\r\n            <li>C++</li>\r\n            <li>Python</li>\r\n            <li>Java</li>\r\n            <li>HTML</li>\r\n            <li>CSS</li>\r\n            <li>JavaScript</li>\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <ul>\r\n            <h3>Frameworks/Libraries/IDEs</h3>\r\n            <li>VueJS</li>\r\n            <li>React</li>\r\n            <li>Android Studio</li>\r\n            <li>Visual Studio</li>\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <ul>\r\n            <h3>Operating Systems</h3>\r\n            <li>Microsoft Windows</li>\r\n            <li>Mac OS</li>\r\n            <li>Linux</li>\r\n            <li>Arch Linux</li>\r\n          </ul>\r\n        </div>\r\n      </span>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default aboutMe;\r\n","import React, { useContext } from \"react\";\r\nimport { MainContext } from \"../../../main_context\";\r\nimport { GitHub } from \"@material-ui/icons\";\r\nimport classes from \"./Project.module.css\";\r\n\r\nconst Project = (props) => {\r\n  const panelContext = useContext(MainContext);\r\n  let panelColor;\r\n\r\n  switch (panelContext.theme) {\r\n    case false:\r\n      panelColor = classes.LightBorder;\r\n      break;\r\n\r\n    case true:\r\n      panelColor = classes.DarkBorder;\r\n      break;\r\n\r\n    default:\r\n  }\r\n\r\n  return (\r\n    <div className={[classes.Project, panelColor].join(\" \")}>\r\n      <div style={{ height: \"75%\" }}>\r\n        <img src={props.image} alt=\"\" />\r\n        <h2>{props.title}</h2>\r\n        <p>{props.description}</p>\r\n      </div>\r\n      <a href={props.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <GitHub />\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import React from \"react\";\r\nimport Project from \"../../Reusuable/Project/Project\";\r\nimport projectList from \"../../../ProjectList.json\";\r\nimport classes from \"./Projects.module.css\";\r\n\r\nconst projects = (props) => {\r\n  return (\r\n    <div>\r\n      <h1>Projects</h1>\r\n      <div className={classes.Projects}>\r\n        {projectList.map((proj, key) => (\r\n          <Project\r\n            key={key}\r\n            image={proj.image}\r\n            title={proj.title}\r\n            description={proj.description}\r\n            link={proj.link}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default projects;\r\n","import React, { useState } from \"react\";\r\nimport Navbar from \"./components/MainBody/Navbar/Navbar\";\r\nimport Welcome from \"./components/MainBody/Welcome/Welcome\";\r\nimport AboutMe from \"./components/MainBody/AboutMe/AboutMe\";\r\nimport Projects from \"./components/MainBody/Projects/Projects\";\r\nimport { MainContext } from \"./main_context\";\r\nimport classes from \"./App.module.css\";\r\n\r\nfunction App() {\r\n  const [theme, setTheme] = useState(false);\r\n  let currentTheme;\r\n\r\n  switch (theme) {\r\n    case false:\r\n      currentTheme = classes.Light;\r\n      break;\r\n    case true:\r\n      currentTheme = classes.Dark;\r\n      break;\r\n    default:\r\n  }\r\n\r\n  const themeSwitcher = () => {\r\n    setTheme((theme) => !theme);\r\n  };\r\n\r\n  return (\r\n    <MainContext.Provider value={{ theme: theme, switchTheme: themeSwitcher }}>\r\n      <div className={[classes.App, currentTheme].join(\" \")}>\r\n        <Navbar />\r\n        <Welcome />\r\n        <AboutMe />\r\n        <Projects />\r\n      </div>\r\n    </MainContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}