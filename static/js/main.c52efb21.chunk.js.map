{"version":3,"sources":["components/Routes/AboutMe/AboutMe.module.css","components/Routes/Welcome/Welcome.module.css","components/UI/Navbar/Navbar.module.css","components/Reusuable/NavItem/NavItem.module.css","assets/logo/react.gif","components/UI/MyLinks/MyLinks.module.css","assets/Sinthooran_Ravinathan_Resume.pdf","assets/images/me.png","components/Reusuable/Project/Project.module.css","components/Routes/Projects/Projects.module.css","components/Reusuable/NavItem/NavItem.js","components/UI/Navbar/Navbar.js","components/UI/MyLinks/MyLinks.js","components/Routes/Welcome/Welcome.js","components/Routes/AboutMe/AboutMe.js","components/Reusuable/Project/Project.js","components/Routes/Projects/Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","navItem","className","classes","NavItem","href","this","props","link","item","Component","defaultProps","icon","undefined","navbar","Navbar","src","logo","alt","steps","loop","Infinity","wrapper","MyLinks","GitHub","fontSize","LinkedIn","PictureAsPdfSharp","Resume","welcome","Welcome","Text","type","bg","aboutMe","AboutMe","MyPic","Description","SkillGrid","project","Card","Project","variant","CardActionArea","CardMedia","component","height","image","object-fit","CardContent","title","Typography","color","description","CardActions","Button","size","projects","Projects","projectList","map","proj","key","App","library","add","fab","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c52efb21.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AboutMe\":\"AboutMe_AboutMe__3txAX\",\"AboutMeDesc\":\"AboutMe_AboutMeDesc__3ZgzC\",\"Description\":\"AboutMe_Description__22ZTW\",\"SkillGrid\":\"AboutMe_SkillGrid__3iykH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Welcome\":\"Welcome_Welcome__2s4jA\",\"Text\":\"Welcome_Text__2snn4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__1XIoc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItem\":\"NavItem_NavItem__34uqS\"};","module.exports = __webpack_public_path__ + \"static/media/react.50e70c87.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyLinks\":\"MyLinks_MyLinks__3PP1I\"};","module.exports = __webpack_public_path__ + \"static/media/Sinthooran_Ravinathan_Resume.a29e8eb9.pdf\";","module.exports = __webpack_public_path__ + \"static/media/me.66512055.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Project\":\"Project_Project__BxuDR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Projects\":\"Projects_Projects__1sajL\"};","import React, { Component } from 'react';\r\nimport classes from './NavItem.module.css';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass navItem extends Component {\r\n    static defaultProps = {\r\n        icon: undefined,\r\n      };\r\n\r\n    render() {\r\n        return (\r\n            <ul className={classes.NavItem}>\r\n                <li>\r\n                    <a href={this.props.link}>\r\n                        {this.props.item}\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        );\r\n    }\r\n};\r\n\r\nexport default navItem;","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport NavItem from '../../Reusuable/NavItem/NavItem';\r\nimport Typical from 'react-typical';\r\nimport logo from '../../../assets/logo/react.gif';\r\n\r\nconst navbar = () => {\r\n    return (\r\n        <header className={classes.Navbar}>\r\n            <div>\r\n                <img src={logo} alt='logo' />\r\n            </div>\r\n\r\n            <span className=\"myName\">\r\n                <Typical steps={['Sinthooran Ravinathan', 5000, 'Computer Science Graduate', 5000]}\r\n                    loop={Infinity}\r\n                    wrapper=\"h3\" />\r\n            </span>\r\n\r\n            <nav>\r\n                <NavItem item=\"Intro\" link=\"/\" />\r\n                <NavItem item=\"About Me\" link=\"/aboutMe\" />\r\n                <NavItem item=\"Projects\" link=\"/projects\" />\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default navbar;\r\n\r\n","import React from 'react';\r\nimport classes from './MyLinks.module.css';\r\nimport NavItem from '../../Reusuable/NavItem/NavItem';\r\nimport { GitHub, LinkedIn, PictureAsPdfSharp } from '@material-ui/icons';\r\nimport Resume from '../../../assets/Sinthooran_Ravinathan_Resume.pdf';\r\n\r\nconst navbar = () => {\r\n    return (\r\n        <footer className={classes.MyLinks}>\r\n            {/* <hr /> */}\r\n            <nav>\r\n                <span>\r\n                    <GitHub fontSize=\"large\"/>\r\n                    <NavItem item=\"Github\" link=\"https://github.com/SinthooranR\" />\r\n                </span>\r\n                <span>\r\n                    <LinkedIn fontSize=\"large\"/>\r\n                    <NavItem item=\"LinkedIn\" link=\"https://www.linkedin.com/in/sinthooranravinathan/\" />\r\n                </span>\r\n                <span>\r\n                    <PictureAsPdfSharp fontSize=\"large\"/>\r\n                    <NavItem item=\"Resume\" link={Resume} />\r\n                </span>\r\n            </nav>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default navbar;\r\n","import React from 'react'\r\nimport Typical from 'react-typical';\r\nimport classes from './Welcome.module.css';\r\nimport ParticlesBg from 'particles-bg';\r\n\r\nconst welcome = (props) => (\r\n    <div className={classes.Welcome}>\r\n        <Typical className={classes.Text} steps={['Welcome', 2000, 'Use the Navigation above and check out the rest', 2000, 'Or Check out more on the links below', 2000]}\r\n            loop={Infinity}\r\n            wrapper=\"h2\" />\r\n        <ParticlesBg type=\"square\" bg={true} />\r\n    </div>\r\n);\r\n\r\nexport default welcome;","import React from 'react';\r\nimport classes from './AboutMe.module.css';\r\nimport MyPic from '../../../assets/images/me.png';\r\nimport Typical from 'react-typical';\r\n\r\nconst aboutMe = (props) => (\r\n        <div className={classes.AboutMe}>\r\n                <span>\r\n                        <Typical steps={['About Me', 5000, 'My Education', 5000]}\r\n                                loop={Infinity}\r\n                                wrapper=\"h1\" />\r\n                </span>\r\n                <img src={MyPic} alt=\"avatar\" />\r\n\r\n                <div className={classes.Description}>\r\n                        <p>Graduated from the University of Ontario Institute of Technology(UOIT) as of May 2020 in Computer Science and aspire to work as a Web/Mobile Developer</p>\r\n                        <span>\r\n                                <h2>Interests:</h2>\r\n                                <ul>\r\n                                        <li>Interested in learning various languages to help experience the worlds of Web and Mobile development</li>\r\n                                        <li>Making use of various databases such as MongoDB, Postgres and SQLite</li>\r\n                                        <li>Designing Pages meeting the indviduals criteria</li>\r\n                                </ul>\r\n                        </span>\r\n\r\n                        <h2>Skills</h2>\r\n                        <span className={classes.SkillGrid}>\r\n                                <div>\r\n                                        <ul>\r\n                                                <h3>Languages</h3>\r\n                                                <li>C++</li>\r\n                                                <li>Python</li>\r\n                                                <li>Java</li>\r\n                                                <li>HTML</li>\r\n                                                <li>CSS</li>\r\n                                                <li>JavaScript</li>\r\n                                        </ul>\r\n                                </div>\r\n                                <div>\r\n                                        <ul>\r\n                                                <h3>Frameworks/Libraries/IDEs</h3>\r\n                                                <li>VueJS</li>\r\n                                                <li>React</li>\r\n                                                <li>Android Studio</li>\r\n                                                <li>Visual Studio</li>\r\n                                        </ul>\r\n                                </div>\r\n                                <div>\r\n                                        <ul>\r\n                                                <h3>Operating Systems</h3>\r\n                                                <li>Microsoft Windows</li>\r\n                                                <li>Mac OS</li>\r\n                                                <li>Linux</li>\r\n                                                <li>Arch Linux</li>\r\n                                        </ul>\r\n                                </div>\r\n                        </span>\r\n                </div>\r\n        </div>\r\n);\r\n\r\nexport default aboutMe;","import React from 'react';\r\nimport classes from './Project.module.css';\r\n\r\n//Material UI card\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Typical from 'react-typical';\r\n\r\n\r\nconst project = (props) => {  \r\n    return (\r\n      <Card className={classes.Project} variant=\"outlined\">\r\n        <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"100\"\r\n          image={props.image}\r\n          object-fit=\"true\"\r\n        />\r\n        {/* <img src={props.image}/> */}\r\n          <CardContent>\r\n            <Typical steps={[props.title, 5000, \"\", 100]}\r\n                loop={Infinity}\r\n                wrapper=\"h2\" />\r\n            <Typography variant=\"body1\" color=\"textPrimary\" component=\"p\">\r\n            {props.description}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n          <Button size=\"small\" color=\"primary\" href={props.link}>\r\n            Github\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  export default project;","import React from 'react';\r\nimport Project from '../../Reusuable/Project/Project';\r\nimport projectList from '../../../ProjectList.json';\r\nimport Typical from 'react-typical';\r\nimport classes from './Projects.module.css';\r\n\r\nconst projects = (props) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <Typical steps={['Projects', 5000, 'Work Done', 5000]}\r\n                    loop={Infinity}\r\n                    wrapper=\"h1\" />\r\n            </span>\r\n            <div className={classes.Projects}>\r\n                {projectList.map((proj, key) => (\r\n                    <Project key={key}\r\n                        image={proj.image}\r\n                        title={proj.title}\r\n                        description={proj.description}\r\n                        link={proj.link} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default projects;","import React, { Component } from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Navbar from './components/UI/Navbar/Navbar';\nimport MyLinks from './components/UI/MyLinks/MyLinks';\nimport Welcome from './components/Routes/Welcome/Welcome';\nimport AboutMe from './components/Routes/AboutMe/AboutMe';\nimport Projects from './components/Routes/Projects/Projects';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\n\nclass App extends Component {\n\n  render() {\n    library.add(fab);\n    return (\n      <div className=\"App\">\n        {/* <Layout />\n         */}\n        <Router>\n          <Navbar />\n          <Route exact path=\"/\" component={Welcome}/>\n          <Route path=\"/aboutMe\" component={AboutMe}/>\n          <Route path=\"/projects\" component={Projects}/>\n          <MyLinks />\n        </Router>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}